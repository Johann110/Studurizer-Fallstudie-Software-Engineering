# Generated by Django 5.2 on 2025-04-10 17:29

import assignments.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        ('documents', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Assignment title', max_length=255)),
                ('description', models.TextField(help_text='Assignment instructions')),
                ('max_points', models.PositiveIntegerField(default=100, help_text='Maximum points possible for this assignment', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)])),
                ('due_date', models.DateTimeField(help_text='Assignment due date and time')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the assignment is currently active')),
                ('allow_late_submissions', models.BooleanField(default=False, help_text='Allow submissions after the due date')),
                ('late_penalty_percentage', models.PositiveIntegerField(default=0, help_text='Percentage deduction for late submissions (0-100)', validators=[django.core.validators.MaxValueValidator(100)])),
                ('course', models.ForeignKey(help_text='Course this assignment belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='courses.course')),
                ('created_by', models.ForeignKey(help_text='Teacher who created the assignment', on_delete=django.db.models.deletion.CASCADE, related_name='created_assignments', to=settings.AUTH_USER_MODEL)),
                ('related_documents', models.ManyToManyField(blank=True, help_text='Documents related to this assignment', related_name='related_assignments', to='documents.document')),
            ],
            options={
                'verbose_name': 'assignment',
                'verbose_name_plural': 'assignments',
                'ordering': ['-due_date'],
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, help_text='Submitted file (if applicable)', null=True, upload_to=assignments.models.submission_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'ppt', 'pptx', 'zip', 'txt'])])),
                ('text_content', models.TextField(blank=True, help_text='Text submission content (if applicable)')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, help_text='Date and time of submission')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time of last update')),
                ('is_late', models.BooleanField(default=False, help_text='Whether this submission was submitted after the due date')),
                ('assignment', models.ForeignKey(help_text='Assignment this submission is for', on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='assignments.assignment')),
                ('student', models.ForeignKey(help_text='Student who submitted', on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'submission',
                'verbose_name_plural': 'submissions',
                'unique_together': {('assignment', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.DecimalField(decimal_places=2, help_text='Points awarded', max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('feedback', models.TextField(blank=True, help_text='Feedback for the student')),
                ('graded_at', models.DateTimeField(auto_now_add=True, help_text='Date and time of grading')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('graded_by', models.ForeignKey(help_text='Teacher who graded this submission', on_delete=django.db.models.deletion.CASCADE, related_name='grades_given', to=settings.AUTH_USER_MODEL)),
                ('submission', models.OneToOneField(help_text='Submission being graded', on_delete=django.db.models.deletion.CASCADE, related_name='grade', to='assignments.submission')),
            ],
            options={
                'verbose_name': 'grade',
                'verbose_name_plural': 'grades',
            },
        ),
    ]
