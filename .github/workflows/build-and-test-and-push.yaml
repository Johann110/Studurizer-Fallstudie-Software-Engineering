name: Build, Test and Push

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # Berechtigungen setzen
    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set branch name
        run: echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
  
      - name: Normalize image name (lowercase)
        run: echo "IMAGE_NAME_LOWER=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build Docker Image for Testing
        run: docker compose build

      # Container starten
      - name: Start container with Docker Compose
        run: |
          docker compose up -d
          sleep 10  # Warten bis der Server gestartet ist

      # Test auf Port 8000
      - name: Test server availability on port 8000
        run: |
          if curl -sSf http://localhost:8000/ > /dev/null; then
            echo "✅ Server is reachable on port 8000"
          else
            echo "❌ Server is not reachable on port 8000"
            docker compose logs
            exit 1
          fi

      # Django Tests ausführen
      - name: Run Django tests
        run: docker compose exec -T studurizer python manage.py test

      # Container Logs anzeigen bei Fehler
      - name: Show logs if tests failed
        if: ${{ failure() }}
        run: docker compose logs

      # Container stoppen
      - name: Stop container
        if: always()
        run: docker compose down

      # Login bei GHCR
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Multi-Arch Image bauen und pushen
      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME_LOWER }}:${{ env.BRANCH_NAME }}
            ${{ github.ref == 'refs/heads/main' && env.IMAGE_NAME_LOWER }}:latest